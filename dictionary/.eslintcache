[{"C:\\Users\\koyam\\Desktop\\typescript\\dictionary\\src\\index.tsx":"1","C:\\Users\\koyam\\Desktop\\typescript\\dictionary\\src\\serviceWorker.ts":"2","C:\\Users\\koyam\\Desktop\\typescript\\dictionary\\src\\app\\store.ts":"3","C:\\Users\\koyam\\Desktop\\typescript\\dictionary\\src\\App.tsx":"4","C:\\Users\\koyam\\Desktop\\typescript\\dictionary\\src\\features\\wordSlice.ts":"5"},{"size":648,"mtime":1609838621984,"results":"6","hashOfConfig":"7"},{"size":5424,"mtime":1609838621987,"results":"8","hashOfConfig":"7"},{"size":394,"mtime":1609842929946,"results":"9","hashOfConfig":"7"},{"size":1531,"mtime":1609844892840,"results":"10","hashOfConfig":"7"},{"size":1281,"mtime":1609844907157,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1gx4nd2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\koyam\\Desktop\\typescript\\dictionary\\src\\index.tsx",[],["24","25"],"C:\\Users\\koyam\\Desktop\\typescript\\dictionary\\src\\serviceWorker.ts",[],"C:\\Users\\koyam\\Desktop\\typescript\\dictionary\\src\\app\\store.ts",[],"C:\\Users\\koyam\\Desktop\\typescript\\dictionary\\src\\App.tsx",["26"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport jishoApi from \"unofficial-jisho-api\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { searchExample, searchPhrase } from \"./features/wordSlice\";\r\nimport { selectWord } from \"./features/wordSlice\";\r\nconst App: React.FC = () => {\r\n  const jisho = new jishoApi();\r\n  const proxy = \"https://cors-anywhere.herokuapp.com/\";\r\n  const [word, setWord] = useState<string>(\"\");\r\n  const url_phrase = proxy + jisho.getUriForPhraseSearch(word);\r\n  const url_example = proxy + jisho.getUriForExampleSearch(word);\r\n  const words = useSelector(selectWord);\r\n  const dispatch = useDispatch();\r\n\r\n  const getExample = async () => {\r\n    try {\r\n      const resHtml = await axios.get(url_example);\r\n\r\n      const res = jisho.parseExamplePageHtml(resHtml.data, word);\r\n      console.log(res.results);\r\n      dispatch(searchExample(res.results));\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  const getPhrase = async () => {\r\n    try {\r\n      const res = await axios.get(url_phrase);\r\n      console.log(res.data.data);\r\n      dispatch(searchPhrase(res.data.data));\r\n    } catch (err) {\r\n      alert(err.mesage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n          setWord(e.target.value);\r\n        }}\r\n      />\r\n      <button onClick={getPhrase}>Phrase</button>\r\n      <button onClick={getExample}>Example</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\koyam\\Desktop\\typescript\\dictionary\\src\\features\\wordSlice.ts",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":13,"column":9,"nodeType":"33","messageId":"34","endLine":13,"endColumn":14},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"@typescript-eslint/no-unused-vars","'words' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]