{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\s_koyama\\\\Desktop\\\\typescript\\\\practice\\\\src\\\\components\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nconst App = () => {\n  _s();\n\n  const [todo, setTodo] = useState(\"test\");\n\n  const addTodo = e => {\n    if (!(e instanceof HTMLInputElement)) {\n      return;\n    } else {\n      const value = e.value;\n      setTodo(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"OK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), todo]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"XhCa+b1vwk4sQQV5EkNZNBpqOXc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/s_koyama/Desktop/typescript/practice/src/components/App.tsx"],"names":["React","useState","App","todo","setTodo","addTodo","e","HTMLInputElement","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAO,MAAP,CAAhC;;AACA,QAAMI,OAAO,GAAIC,CAAD,IAA0C;AACxD,QAAI,EAAEA,CAAC,YAAYC,gBAAf,CAAJ,EAAsC;AACpC;AACD,KAFD,MAEO;AACL,YAAMC,KAAK,GAAGF,CAAC,CAACE,KAAhB;AACAJ,MAAAA,OAAO,CAACI,KAAD,CAAP;AACD;AACF,GAPD;;AAQA,sBACE;AAAA,4BACE;AAAO,MAAA,QAAQ,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGF,IAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlBD;;GAAMD,G;;KAAAA,G;AAoBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\nconst App: React.FC = () => {\r\n  type Todo = string;\r\n  const [todo, setTodo] = useState<Todo>(\"test\");\r\n  const addTodo = (e: React.FormEvent<HTMLInputElement>) => {\r\n    if (!(e instanceof HTMLInputElement)) {\r\n      return;\r\n    } else {\r\n      const value = e.value;\r\n      setTodo(value);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <input onChange={addTodo} />\r\n      <button type=\"submit\">OK</button>\r\n      {todo}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}